#!/bin/bash
# --------------------------------------------------------------------------------------------------
# dealerd       Startup script for the dealer Server
#
# chkconfig: - 70 15
# description: Dealer is a process that will distribute popular datasets in CMS.
#
# processname: dealerd
# pidfile:     /var/run/dealerd.pid
# --------------------------------------------------------------------------------------------------
# Source function library.
. /etc/rc.d/init.d/functions

# This will prevent initlog from swallowing up a pass-phrase prompt if
# mod_ssl needs a pass-phrase from the user.
INITLOG_ARGS=""

PROG=dynamo-dealerd
TARGET=_DYNAMO_BASE_/bin/dealerd

# Path to the running script, server binary, and short-form for messages.
PIDFILE=${PIDFILE-/var/run/dynamo-dealerd.pid}
LOCKFILE=${LOCKFILE-/var/lock/subsys/dynamo-dealerd}

EXITCODE=0
STOP_TIMEOUT=${STOP_TIMEOUT-120}

# Start dealer daemon (dealerd)
start() {
  PIDS=$(pgrep $PROG > /dev/null)
  if [ "$PIDS" ]
  then
    echo "$PROG already running: $PIDS"
    return 1
  fi

  if [ -e $PIDFILE ]
  then
    echo "$PROG does not appear running but PID file $PIDFILE exists."
    echo "PID: $(cat $PIDFILE)"
    return 1
  fi

  if [ -e $LOCKFILE ]
  then
    echo "$PROG may have just started in another session."
    return 1
  fi

  touch $LOCKFILE

  echo -n $"Starting $PROG:"
  daemon --user=_USER_ --pidfile=$PIDFILE $TARGET \&
  EXITCODE=$?
  echo

  if [ $EXITCODE -eq 0 ]
  then
    echo $(pgrep $PROG) > $PIDFILE
  fi

  rm $LOCKFILE

  return $EXITCODE
}

# Stop dealer daemon (dealerd)
stop() {
  echo -n $"Stopping $PROG:"
  killproc -p $PIDFILE -d $STOP_TIMEOUT $TARGET
  EXITCODE=$?
  echo

  [ $EXITCODE -eq 0 ] && rm -f $PIDFILE
}

# See how we were called.
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    status -p $PIDFILE $PROG
    EXITCODE=$?
    ;;
  restart)
    stop
    start
    ;;
  condrestart|try-restart)
    if status -p $PIDFILE $PROG >&/dev/null
    then
      stop
      start
    fi
    ;;
  *)
    echo $"Usage: $PROG {start|stop|restart|status|help}"
    EXITCODE=2
esac

exit $EXITCODE
