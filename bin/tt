#!/usr/bin/env python

#-------------------------------------------------------------------------
# Track transaction
#  Check the transaction history and mark the deletions / copies that are
#  completed. Warn if a transaction is stuck for a long time.
#-------------------------------------------------------------------------

import time
import logging

import common.interface.classes as classes

logger = logging.getLogger(__name__)

history_manager = classes.default_interface['history']()
copy_interface = classes.default_interface['copy']()
deletion_interface = classes.default_interface['deletion']()

incomplete_copies = history_manager.get_incomplete_copies()

for record in incomplete_copies:
    completed = copy_interface.check_completion(record.operation_id)
    if completed:
        logger.info('Copy %d to %s has completed.', record.operation_id, record.site_name)

        record.completion_time = time.time()
        history_manager.update_copy_entry(record)

incomplete_deletions = history_manager.get_incomplete_deletions()

for record in incomplete_deletions:
    completed = copy_interface.check_completion(record.operation_id)
    if completed:
        logger.info('Deletion %d at %s has completed.', record.operation_id, record.site_name)

        record.completion_time = time.time()
        history_manager.update_deletion_entry(record)
