#!/bin/bash
# --------------------------------------------------------------------------------------------------
# Process to run detox/dealer periodically.
#
# v1.0                                                                       Y.Iiyama (Apr 19, 2016)
# --------------------------------------------------------------------------------------------------

HOURS_PER_LOGFILE=12

export DYNAMO_BASE=$(dirname $(cd $(dirname ${BASH_SOURCE[0]}); pwd))
source $DYNAMO_BASE/etc/profile.d/init.sh

cleanup() {
  PID=$1

  if [ -e /proc/$PID ]
  then
    echo "Dynamo process $PID is not dead. Please kill it by hand."
  fi

  if [ "$2" = "crash" ]
  then
    TAG=crash_$(date +%s)
    echo "Abnormal termination of dynamo cycle. Preserving the database state to tag $TAG."
    $DYNAMO_BASE/bin/execlib common/interface/store.py snapshot --tag $TAG
    $DYNAMO_BASE/bin/execlib common/interface/history.py snapshot $TAG
    echo "Restoring the database state."
    $DYNAMO_BASE/bin/execlib common/interface/store.py restore --tag last
    $DYNAMO_BASE/bin/execlib common/interface/store.py set_last_update 0
    $DYNAMO_BASE/bin/execlib common/interface/history.py restore last

    # this process is run as a daemon - send email and continue
    echo "Help! Dynamo failed. Return code $RC. Check log $LOG on $HOSTNAME." | mailx -s "Dynamo error" t2lab@mit.edu
    echo "Re-entering cycle.. (see next log)"
  else
    echo "Dynamod is killed. Please clean up after yourself."
    echo "Exiting with code 1."
    exit 1
  fi
}

exec 0<&-

while true
do

  # make sure the log directory exists
  mkdir -p $DYNAMO_LOGDIR

  LOG=$DYNAMO_LOGDIR/dynamo-$(date "+%Y%m%d_%H%M%S").log

  exec 1>$LOG
  exec 2>&1

  if [ $(du -mc $DYNAMO_LOGDIR/dynamo-* 2>/dev/null | awk '/total/ {print $1}') -gt 10000 ] # logs exceeding 10 GB
  then
    find $DYNAMO_LOGDIR -name dynamo-* -mtime 1 -delete
  fi

  echo "Start $HOURS_PER_LOGFILE cycles; log file $LOG"
  IHOUR=0
  while [ $IHOUR -lt $HOURS_PER_LOGFILE ]
  do
    OPTIONS=""
    APPLICATIONS=""
    if [ $(($IHOUR%$DYNAMO_DETOX_INTERVAL)) -eq 0 ]
    then
      APPLICATIONS="detox"
      OPTIONS="--force-inventory-update"
    fi
    if [ $(($IHOUR%$DYNAMO_DEALER_INTERVAL)) -eq 0 ]
    then
      APPLICATIONS="dealer $APPLICATIONS"
    fi

    IHOUR=$(($IHOUR+1))

    if [ -z "$APPLICATIONS" ]
    then
      sleep 3600
      continue
    fi

    date
  
    $DYNAMO_BASE/bin/execlib common/interface/history.py snapshot

    $DYNAMO_BASE/bin/dynamo $APPLICATIONS $OPTIONS --detox-policy-stack 'AnalysisOps:Routine():iterative' 'DataOps:Lock():static' --log-level INFO &
    PID=$!

    trap "kill -INT $PID; cleanup $PID" SIGINT SIGTERM

    wait $PID

    [ $? -eq 0 ] || cleanup $PID crash

    trap - SIGINT SIGTERM

    $DYNAMO_BASE/bin/execlib common/interface/history.py clean last

    $DYNAMO_BASE/bin/siteinfo.py --out /home/$USER/public_html
  
    echo ""

    sleep 3600
  done

  # take a deep breath
  sleep 5

done

exit 0
