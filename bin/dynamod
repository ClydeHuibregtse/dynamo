#!/bin/bash
# --------------------------------------------------------------------------------------------------
# Process to run detox/dealer periodically.
#
# v1.0                                                                       Y.Iiyama (Apr 19, 2016)
# --------------------------------------------------------------------------------------------------

TEST=$1

HOURS_PER_LOGFILE=12

export DYNAMO_BASE=$(dirname $(cd $(dirname ${BASH_SOURCE[0]}); pwd))
source $DYNAMO_BASE/etc/profile.d/init.sh

exec 0<&-

while true
do

  # make sure the log directory exists
  mkdir -p $DYNAMO_LOGDIR

  LOG=$DYNAMO_LOGDIR/dynamo-$(date "+%Y%m%d_%H%M%S").log

  exec 1>$LOG
  exec 2>&1

  if [ $(du -mc $DYNAMO_LOGDIR/dynamo-* 2>/dev/null | awk '/total/ {print $1}') -gt 10000 ] # logs exceeding 10 GB
  then
    find $DYNAMO_LOGDIR -name dynamo-* -mtime 1 -delete
  fi

  echo "Start $HOURS_PER_LOGFILE cycles; log file $LOG"
  IHOUR=0
  while [ $IHOUR -lt $HOURS_PER_LOGFILE ]
  do
    OPTIONS="--site T2_* T1_*_Disk"
    APPLICATIONS=""
    if [ $(($IHOUR%$DYNAMO_DETOX_INTERVAL)) -eq 0 ]
    then
      APPLICATIONS="detox"
      OPTIONS=$OPTIONS" --force-inventory-update"
    fi
    if [ $(($IHOUR%$DYNAMO_DEALER_INTERVAL)) -eq 0 ]
    then
      APPLICATIONS="dealer $APPLICATIONS"
    fi

    IHOUR=$(($IHOUR+1))

    if [ -z "$APPLICATIONS" ]
    then
      sleep 3600
      continue
    fi

    date

    $DYNAMO_BASE/bin/execlib common/interface/history.py snapshot

    $DYNAMO_BASE/bin/dynamo $APPLICATIONS $OPTIONS $TEST --log-level INFO
    RC=$?
    if [[ $APPLICATIONS =~ detox ]] && [ $RC -eq 0 ]
    then 
      $DYNAMO_BASE/bin/dynamo detox --site T0_CH_CERN_Disk --detox-policy-stack DataOps:locked:static $TEST --log-level INFO
      RC=$?
    fi

    if [ $RC -ne 0 ] && [ $RC -ne 130 ]
    then
      # this is a crash of some sort
      TAG=crash_$(date +%s)
      echo "Abnormal termination of dynamo cycle. Preserving the database state to tag $TAG."
      $DYNAMO_BASE/bin/execlib common/interface/store.py snapshot --tag $TAG
      $DYNAMO_BASE/bin/execlib common/interface/history.py snapshot $TAG
      echo "Restoring the database state."
      $DYNAMO_BASE/bin/execlib common/interface/store.py restore --tag last
      $DYNAMO_BASE/bin/execlib common/interface/store.py set_last_update 0
      $DYNAMO_BASE/bin/execlib common/interface/history.py restore last

      if [ -e /var/run/dynamod.pid ]
      then
        # this process is run as a daemon - send email and continue
        echo "Help! Dynamo failed. Return code $RC. Check log $LOG on $HOSTNAME." | mailx -s "Dynamo error" t2lab@mit.edu
        echo "Re-entering cycle.. (see next log)"
        break
      else
        echo "Exiting with code $RC."
        exit $RC
      fi
    fi

    if [[ $APPLICATIONS =~ detox ]]
    then
      # test run to produce sites info
      $DYNAMO_BASE/bin/dynamo $APPLICATIONS --test-run --detox-policy-stack 'caf-comm:minimum_copies:static' 'caf-alca:minimum_copies:static' 'local:minimum_copies:iterative' 'IB RelVal:minimum_copies:static' --log-level INFO
    fi

    $DYNAMO_BASE/bin/execlib common/interface/history.py clean last

    if [ $RC -eq 130 ]
    then
      # case: dynamo killed with SIGINT - you were probably running this script in a terminal and pressed Ctrl-C
      exit 0
    fi

    $DYNAMO_BASE/bin/siteinfo --out /home/$USER/public_html/IntelROCCS/Detox
  
    echo ""

    sleep 3600
  done

  # take a deep breath
  sleep 5

done

exit 0
